/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GeoPointResourceRes'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./GeoPointResourceRes'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiDocumentation) {
      root.ApiDocumentation = {};
    }
    root.ApiDocumentation.UserResource = factory(root.ApiDocumentation.ApiClient, root.ApiDocumentation.GeoPointResourceRes);
  }
}(this, function(ApiClient, GeoPointResourceRes) {
  'use strict';

  /**
   * The UserResource model module.
   * @module model/UserResource
   * @version 1.0
   */

  /**
   * Constructs a new <code>UserResource</code>.
   * @alias module:model/UserResource
   * @class
   * @param city {String} 
   * @param createdAt {Date} 
   * @param location {module:model/GeoPointResourceRes} 
   * @param locationGeoHash {String} 
   * @param phone {String} 
   * @param source {module:model/UserResource.SourceEnum} 
   * @param updatedAt {Date} 
   * @param zipCode {String} 
   */
  var exports = function(city, createdAt, location, locationGeoHash, phone, source, updatedAt, zipCode) {
    this.city = city;
    this.createdAt = createdAt;
    this.location = location;
    this.locationGeoHash = locationGeoHash;
    this.phone = phone;
    this.source = source;
    this.updatedAt = updatedAt;
    this.zipCode = zipCode;
  };

  /**
   * Constructs a <code>UserResource</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserResource} obj Optional instance to populate.
   * @return {module:model/UserResource} The populated <code>UserResource</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'Date');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('firstName'))
        obj.firstName = ApiClient.convertToType(data['firstName'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('lastName'))
        obj.lastName = ApiClient.convertToType(data['lastName'], 'String');
      if (data.hasOwnProperty('location'))
        obj.location = GeoPointResourceRes.constructFromObject(data['location']);
      if (data.hasOwnProperty('locationGeoHash'))
        obj.locationGeoHash = ApiClient.convertToType(data['locationGeoHash'], 'String');
      if (data.hasOwnProperty('phone'))
        obj.phone = ApiClient.convertToType(data['phone'], 'String');
      if (data.hasOwnProperty('source'))
        obj.source = ApiClient.convertToType(data['source'], 'String');
      if (data.hasOwnProperty('street'))
        obj.street = ApiClient.convertToType(data['street'], 'String');
      if (data.hasOwnProperty('streetNo'))
        obj.streetNo = ApiClient.convertToType(data['streetNo'], 'String');
      if (data.hasOwnProperty('updatedAt'))
        obj.updatedAt = ApiClient.convertToType(data['updatedAt'], 'Date');
      if (data.hasOwnProperty('zipCode'))
        obj.zipCode = ApiClient.convertToType(data['zipCode'], 'String');
    }
    return obj;
  }

  /**
   * @member {String} city
   */
  exports.prototype.city = undefined;

  /**
   * @member {Date} createdAt
   */
  exports.prototype.createdAt = undefined;

  /**
   * @member {String} email
   */
  exports.prototype.email = undefined;

  /**
   * @member {String} firstName
   */
  exports.prototype.firstName = undefined;

  /**
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {String} lastName
   */
  exports.prototype.lastName = undefined;

  /**
   * @member {module:model/GeoPointResourceRes} location
   */
  exports.prototype.location = undefined;

  /**
   * @member {String} locationGeoHash
   */
  exports.prototype.locationGeoHash = undefined;

  /**
   * @member {String} phone
   */
  exports.prototype.phone = undefined;

  /**
   * @member {module:model/UserResource.SourceEnum} source
   */
  exports.prototype.source = undefined;

  /**
   * @member {String} street
   */
  exports.prototype.street = undefined;

  /**
   * @member {String} streetNo
   */
  exports.prototype.streetNo = undefined;

  /**
   * @member {Date} updatedAt
   */
  exports.prototype.updatedAt = undefined;

  /**
   * @member {String} zipCode
   */
  exports.prototype.zipCode = undefined;


  /**
   * Allowed values for the <code>source</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SourceEnum = {
    /**
     * value: "ADMIN"
     * @const
     */
    ADMIN: "ADMIN",

    /**
     * value: "APP"
     * @const
     */
    APP: "APP",

    /**
     * value: "HOTLINE"
     * @const
     */
    HOTLINE: "HOTLINE"
  };

  return exports;

}));
