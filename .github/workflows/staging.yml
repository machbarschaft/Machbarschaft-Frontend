name: Test, build and release

on:
  push:
    branches:
      - '**'
      - '!master'

jobs:


  main:
    name: Test & Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm ci

      # - run: npm run test
      # - run: npm run lint
      # - run: npm run e2e

      - run: npm run build


  release:
    name: Release
    needs: main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: npm ci

      - if: github.ref == 'refs/heads/master'
        run: npx -p @semantic-release/changelog -p @semantic-release/git -p semantic-release semantic-release


  deploy:
    name: Deploy
    needs: main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Prepare Cloud Build
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCLOUD_AUTH }}

      - name: Cloud Run Deployment
        run: |
          gcloud config set project ${PROJECT_ID}

          gcloud builds submit \
            --config=cloudbuild.yaml \
            --substitutions ^--^_FIREBASE_API_KEY=${FIREBASE_API_KEY}--_MAPS_API_KEY=${MAPS_API_KEY}--_API_URL_SUB="api-sta"

          gcloud run deploy machbarschaft-webapp-sta \
            --image gcr.io/${PROJECT_ID}/machbarschaft-webapp:latest \
            --region europe-west1 \
            --platform managed
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY_STA }}
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY_STA }}
          PROJECT_ID: ${{ secrets.PROJECT_ID_STA }}


  main-pr:
    name: Create PR
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: pull-request
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "master"
          github_token: ${{ secrets.GITHUB_TOKEN }}
